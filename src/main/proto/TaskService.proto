syntax = "proto3";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "MemberService.proto";
import "SpecificDateTime.proto";
option java_multiple_files = true;
option csharp_namespace = "GrpcNjordClient.Task";
package com.sep3yg9.njorddata.grpc.protobuf.task;

// Allow creation of a task with a member assigned, a project assigned, title, description, status, time estimation and creation date.
message CreatingTask {
  int32 memberassigned = 1;
  int32 projectAssigned = 2;
  string title = 3;
  string description = 4;
  string status = 5;
  com.sep3yg9.njorddata.grpc.protobuf.specificdatetime.SpecificTime timeestimation = 6;
  com.sep3yg9.njorddata.grpc.protobuf.specificdatetime.SpecificDateTime creationdate = 7;
}

// Allow to update a member assigned, title, description, status and time estimation of a task.
message UpdatingTask {
  int32 id = 1;
  int32 memberassigned = 2;
  string title = 3;
  string description = 4;
  string status = 5;
  com.sep3yg9.njorddata.grpc.protobuf.specificdatetime.SpecificTime timeestimation = 6;
}

// Full model of Task
message TaskGrpc {
  int32 id = 1;
  com.sep3yg9.njorddata.grpc.protobuf.member.MemberGrpc memberassigned = 2;
  int32 projectAssigned = 3;
  string title = 4;
  string description = 5;
  string status = 6;
  com.sep3yg9.njorddata.grpc.protobuf.specificdatetime.SpecificTime timeestimation = 7;
  com.sep3yg9.njorddata.grpc.protobuf.specificdatetime.SpecificDateTime creationdate = 8;
}

// Basic model of Task
message BasicTask {
  int32 id = 1;
  string title = 2;
  string status = 3;
  com.sep3yg9.njorddata.grpc.protobuf.specificdatetime.SpecificDateTime creationdate = 4;
}

// List of tasks
message GrpcTaskList {
  repeated TaskGrpc tasksList = 1;
}

/*
  Services for Task model
 */
service TaskService {
  // CreateTask will create a task and return it.
  rpc CreateTask(CreatingTask) returns (TaskGrpc);
  // UpdateTask will update a task with new information and return it.
  rpc UpdateTask(UpdatingTask) returns (TaskGrpc);
  // DeleteTask will delete a specific task through the ID sent in the parameters.
  rpc DeleteTask(google.protobuf.Int32Value) returns (google.protobuf.Empty);
  // GetById will return a task which ID is the same as the one sent in arguments.
  rpc GetById(google.protobuf.Int32Value) returns (TaskGrpc);
  // GetById will return a list of tasks which assignedProject ID is the same as the one sent in arguments.
  rpc GetByProjectId(google.protobuf.Int32Value) returns (GrpcTaskList);
}