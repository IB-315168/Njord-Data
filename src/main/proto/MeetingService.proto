syntax = "proto3";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "MemberService.proto";
import "SpecificDateTime.proto";
option java_multiple_files = true;
option csharp_namespace = "GrpcNjordClient.Meeting";
package com.sep3yg9.njorddata.grpc.protobuf.meeting;

// You can create a meeting with just an leader, a project, title and description, as well as a start date and end date
message CreatingMeeting {
  int32 assignedleader = 1; // Leader of the meeting
  int32 projectAssigned = 2;
  string title = 3;
  string description = 4;
  com.sep3yg9.njorddata.grpc.protobuf.specificdatetime.SpecificDateTime startdate = 5;
  com.sep3yg9.njorddata.grpc.protobuf.specificdatetime.SpecificDateTime enddate = 6;
}

// You can update only the title, description, start date and end date from a meeting.
message UpdatingMeeting {
  int32 id = 1;
  string title = 2;
  string description = 3;
  com.sep3yg9.njorddata.grpc.protobuf.specificdatetime.SpecificDateTime startdate = 4;
  com.sep3yg9.njorddata.grpc.protobuf.specificdatetime.SpecificDateTime enddate = 5;
}

//
message MeetingGrpc {
  int32 id = 1;
  com.sep3yg9.njorddata.grpc.protobuf.member.MemberGrpc assignedleader = 2;
  string title = 3;
  string description = 4;
  com.sep3yg9.njorddata.grpc.protobuf.specificdatetime.SpecificDateTime startdate = 5;
  com.sep3yg9.njorddata.grpc.protobuf.specificdatetime.SpecificDateTime enddate = 6;
}

//
message BasicMeeting {
  int32 id = 1;
  string title = 2;
  com.sep3yg9.njorddata.grpc.protobuf.specificdatetime.SpecificDateTime startdate = 3;
  com.sep3yg9.njorddata.grpc.protobuf.specificdatetime.SpecificDateTime enddate = 4;
}

// List of meetings
message GrpcMeetingList {
  repeated MeetingGrpc meetingsList = 1;
}

/*
  <b>MeetingService</b> Meeting Service Description
 */
service MeetingService{
  // CreateMeeting returns a meeting that has been created with the information passed.
  rpc CreateMeeting(CreatingMeeting) returns (MeetingGrpc);
  // UpdateMeeting returns a meeting that has been updated with the information passed.
  rpc UpdateMeeting(UpdatingMeeting) returns (MeetingGrpc);
  // DeleteMeeting will delete a specific meeting through the id sent in arguments.
  rpc DeleteMeeting(google.protobuf.Int32Value) returns (google.protobuf.Empty);
  // GetById will return a meeting which ID is the same as the one sent in arguments.
  rpc GetById(google.protobuf.Int32Value) returns (MeetingGrpc);
  // GetByProjectId will return a list of meetings in which projectId is the same as the one sent in arguments
  rpc GetByProjectId(google.protobuf.Int32Value) returns (GrpcMeetingList);
}